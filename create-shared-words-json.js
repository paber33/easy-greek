#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–µ—Ç JSON —Ñ–∞–π–ª—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –¥–ª—è –ü–∞–≤–ª–∞ –∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä—ã
 * –≠—Ç–∏ —Ñ–∞–π–ª—ã –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 */

const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å–ª–æ–≤–∞
const wordsPath = path.join(__dirname, 'greek-words-76.json');

if (!fs.existsSync(wordsPath)) {
  console.error('‚ùå –§–∞–π–ª greek-words-76.json –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  process.exit(1);
}

const wordsData = JSON.parse(fs.readFileSync(wordsPath, 'utf8'));

console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ü–∞–≤–ª–∞ –∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä—ã\n');

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ü–∞–≤–ª–∞
const pavelWords = wordsData.map((word, index) => ({
  id: `pavel-${index + 1}`,
  greek: word.greek,
  translation: word.translation,
  tags: word.tags || [],
  status: 'new',
  reps: 0,
  lapses: 0,
  ease: 2.5,
  interval: 0,
  lastReview: undefined,
  due: new Date().toISOString(),
  correct: 0,
  incorrect: 0,
  learningStepIndex: undefined,
  currentStep: undefined,
  isLeech: false,
  examples: word.examples || [],
  notes: word.notes || '',
  pronunciation: word.pronunciation || '',
  audioUrl: word.audioUrl || '',
  imageUrl: word.imageUrl || '',
  difficulty: undefined,
  stability: undefined,
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString()
}));

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä—ã
const aleksandraWords = wordsData.map((word, index) => ({
  id: `aleksandra-${index + 1}`,
  greek: word.greek,
  translation: word.translation,
  tags: word.tags || [],
  status: 'new',
  reps: 0,
  lapses: 0,
  ease: 2.5,
  interval: 0,
  lastReview: undefined,
  due: new Date().toISOString(),
  correct: 0,
  incorrect: 0,
  learningStepIndex: undefined,
  currentStep: undefined,
  isLeech: false,
  examples: word.examples || [],
  notes: word.notes || '',
  pronunciation: word.pronunciation || '',
  audioUrl: word.audioUrl || '',
  imageUrl: word.imageUrl || '',
  difficulty: undefined,
  stability: undefined,
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString()
}));

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
const pavelPath = path.join(__dirname, 'pavel-words-76.json');
const aleksandraPath = path.join(__dirname, 'aleksandra-words-76.json');

fs.writeFileSync(pavelPath, JSON.stringify(pavelWords, null, 2));
fs.writeFileSync(aleksandraPath, JSON.stringify(aleksandraWords, null, 2));

console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:');
console.log(`   üìÑ pavel-words-76.json (${pavelWords.length} —Å–ª–æ–≤)`);
console.log(`   üìÑ aleksandra-words-76.json (${aleksandraWords.length} —Å–ª–æ–≤)`);

console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ:');
console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ Pavel');
console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–°–ª–æ–≤–∞"');
console.log('4. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å JSON"');
console.log('5. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª pavel-words-76.json');
console.log('6. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–ª—è Aleksandra —Å —Ñ–∞–π–ª–æ–º aleksandra-words-76.json');

console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
console.log('   - –£ –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥–µ—Ç –ø–æ 76 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–ª–æ–≤');
console.log('   - –í—Å–µ —Å–ª–æ–≤–∞ –±—É–¥—É—Ç –≤ —Å—Ç–∞—Ç—É—Å–µ "new"');
console.log('   - –î–∞–ª—å—à–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ');
console.log('   - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Supabase –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

// –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ –æ–±—â–∏–π —Ñ–∞–π–ª –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
const sharedPath = path.join(__dirname, 'shared-words-76.json');
fs.writeFileSync(sharedPath, JSON.stringify(wordsData, null, 2));

console.log(`\nüìÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω: shared-words-76.json (${wordsData.length} —Å–ª–æ–≤)`);
console.log('   –≠—Ç–æ—Ç —Ñ–∞–π–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
